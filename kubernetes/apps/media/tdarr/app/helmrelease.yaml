---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: tdarr
  namespace: media
spec:
  chart:
    spec:
      chart: app-template
      version: 3.2.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
      reconcileStrategy: Revision

  interval: 4m
  driftDetection:
    mode: enabled
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false

  values:
    controllers:
      tdarr:
        strategy: RollingUpdate
        containers:
          app:
            image:
              repository: ghcr.io/haveagitgat/tdarr
              tag: 2.22.01
            env:
              serverIP: 0.0.0.0
              serverPort: 8266
              webUIPort: 8265
              internalNode: true
              inContainer: true
              ffmpegVersion: 6
              nodeName: MyInternalNode

            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /
                    port: 8265
                  initialDelaySeconds: 10
                  periodSeconds: 10
                  timeoutSeconds: 3
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false

            resources:
              requests:
                gpu.intel.com/i915: 1
                cpu: 100m
                memory: 512Mi
              limits:
                gpu.intel.com/i915: 1
                memory: 8Gi

    defaultPodOptions:
      nodeSelector:
        intel.feature.node.kubernetes.io/gpu: "true"
      securityContext:
        runAsUser: *id
        runAsGroup: *id
        fsGroup: *id
        fsGroupChangePolicy: "OnRootMismatch"

    service:
      app:
        controller: tdarr
        type: LoadBalancer
        externalTrafficPolicy: Cluster
        ports:
          http:
            port: 8265
          server:
            enabled: true
            protocol: TCP
            port: 8266

    ingress:
      app:
        enabled: true
        className: "external"
        annotations:
          external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
          hajimari.io/icon: mdi:television-classic
          gethomepage.dev/enabled: "true"
          gethomepage.dev/description: Automated transcoding
          gethomepage.dev/group: Media Management
          gethomepage.dev/icon: tdarr.png
          gethomepage.dev/name: Tdarr
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *host

    persistence:
      config:
        enabled: true
        type: hostPath
        hostPath: /home/lucian/configs/tdarr/config
        globalMounts:
          - path: /app/config
            readOnly: false

      data:
        enabled: true
        type: hostPath
        hostPath: /home/lucian/configs/tdarr/data
        globalMounts:
          - path: /app/server
            readOnly: false

      media:
        enabled: true
        type: nfs
        server: 10.10.10.10
        path: /mnt/data/media
        globalMounts:
          - path: /media

      temp:
        enabled: true
        type: hostPath
        hostPath: /home/lucian/configs/tdarr/temp
        globalMounts:
          - path: /temp
            readOnly: false
